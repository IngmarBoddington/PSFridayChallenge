var fs = require('fs'),
  path = require('path');
function readFile(filePath, logger) {
  try {
    var fileContents;
    // Validate that the filePath is relative; make an exception for the case of the
    // absolute path "/var/task/<path>".
    if (process.env.NODE_ENV === 'test' && process.env.TEST_ENV === 'integration') {
      fileContents = fs.readFileSync(filePath);
      return fileContents;
    }
    if (path.isAbsolute(filePath) && !path.parse(filePath).dir.startsWith('/var/task')) {
      // log error that file in filePath cannot be read
      logger.error('[HTTP Service]: Tracer can only read absolute file path starting with /var/task. Provided file path is:', filePath);
      return;
    } else if (path.isAbsolute(filePath) && path.parse(filePath).dir.startsWith('/var/task')) {
      fileContents = fs.readFileSync(filePath);
    } else {
      fileContents = fs.readFileSync('/var/task/' + filePath);
    }
    return fileContents;
  } catch (exception) {
    logger.error('[HTTP Service]: Failed in reading the file', filePath, 'due to', exception);
    return;
  }
}

function getIntEnvironmentVariableOrDefault(envVarName, defaultVal) {
  if (!process.env[envVarName]) {
    return defaultVal;
  }
  let val = parseInt(process.env[envVarName], 10);
  if (!isNaN(val)) {
    return val;
  }

  return defaultVal;
}

module.exports.readFile = readFile;
module.exports.getIntEnvironmentVariableOrDefault = getIntEnvironmentVariableOrDefault;