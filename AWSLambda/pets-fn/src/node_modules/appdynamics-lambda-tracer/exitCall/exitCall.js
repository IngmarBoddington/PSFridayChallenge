var Logger = require('../helpers/logger').Logger;

function ExitCall(exitCallInfo, txnGuid, btId, txn) {
  this.exitType = exitCallInfo.exitType;
  this.exitSubType = exitCallInfo.exitSubType;
  this.identifyingProperties = exitCallInfo.identifyingProperties;
  this.backendId = exitCallInfo.backendId;
  this.txnGuid = txnGuid;
  this.btId = btId;
  this.txn = txn;
  this.accountGUID = undefined;
  this.applicationID = undefined;
  this.tierID = undefined;
  this.startTimeInMs = undefined;
  this.endTimeInMs = undefined;
}

ExitCall.validate = function (exitCall) {
  var logger = Logger.getInstance();
  var errorMsg = '';
  if (!exitCall) {
    errorMsg += 'Exit call validation failed. Exit call is missing';
    logger.error(errorMsg);
    return false;
  }
  if (!exitCall.accountGUID)
    errorMsg += 'Exit call validation failed. Exit call is missing account GUID. ';
  if (!exitCall.applicationID)
    errorMsg += 'Exit call validation failed. Exit call is missing application ID. ';
  if (!exitCall.tierID)
    errorMsg += 'Exit call validation failed. Exit call is missing tier ID. ';
  if (!exitCall.txnGuid)
    errorMsg += 'Exit call validation failed. Exit call is missing transaction GUID. ';
  if (!exitCall.exitType)
    errorMsg += 'Exit call validation failed. Exit call is missing exit type. ';
  if (!exitCall.exitSubType)
    errorMsg += 'Exit call validation failed. Exit call is missing exit sub type. ';
  if (!exitCall.identifyingProperties)
    errorMsg += 'Exit call validation failed. Exit call is missing identifying properties. ';
  if (!exitCall.txn)
    errorMsg += 'Exit call validation failed. Exit call is missing the transaction. ';
  if (errorMsg.length) {
    logger.error(errorMsg);
    return false;
  }
  return true;
}

exports.ExitCall = ExitCall;